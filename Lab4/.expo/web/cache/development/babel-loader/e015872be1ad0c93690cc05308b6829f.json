{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    checked = _useState2[0],\n    setChecked = _useState2[1];\n  var checkList = [\"Apple\", \"Banana\", \"Tea\", \"Coffee\"];\n  var handleCheck = function handleCheck(event) {\n    var updatedList = _toConsumableArray(checked);\n    if (event.target.checked) {\n      updatedList = [].concat(_toConsumableArray(checked), [event.target.value]);\n    } else {\n      updatedList.splice(checked.indexOf(event.target.value), 1);\n    }\n    setChecked(updatedList);\n  };\n  var checkedItems = checked.length ? checked.reduce(function (total, item) {\n    return total + \", \" + item;\n  }) : \"\";\n  var isChecked = function isChecked(item) {\n    return checked.includes(item) ? \"checked-item\" : \"not-checked-item\";\n  };\n  return _jsxs(\"div\", {\n    className: \"app\",\n    children: [_jsxs(\"div\", {\n      className: \"checkList\",\n      children: [_jsx(\"div\", {\n        className: \"title\",\n        children: \"Your CheckList:\"\n      }), _jsx(\"div\", {\n        className: \"list-container\",\n        children: checkList.map(function (item, index) {\n          return _jsxs(\"div\", {\n            children: [_jsx(\"input\", {\n              value: item,\n              type: \"checkbox\",\n              onChange: handleCheck\n            }), _jsx(\"span\", {\n              className: isChecked(item),\n              children: item\n            })]\n          }, index);\n        })\n      })]\n    }), _jsx(\"div\", {\n      children: \"Items checked are: \" + checkedItems\n    })]\n  });\n}\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(_jsx(App, {}), rootElement);","map":{"version":3,"names":["React","useState","ReactDOM","App","checked","setChecked","checkList","handleCheck","event","updatedList","target","value","splice","indexOf","checkedItems","length","reduce","total","item","isChecked","includes","map","index","rootElement","document","getElementById","render"],"sources":["C:/Users/Robert/Desktop/Klient_Serwer_Lab_21720/Lab4/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\n\nfunction App() {\n  // State with list of all checked item\n  const [checked, setChecked] = useState([]);\n  const checkList = [\"Apple\", \"Banana\", \"Tea\", \"Coffee\"];\n\n  // Add/Remove checked item from list\n  const handleCheck = (event) => {\n    var updatedList = [...checked];\n    if (event.target.checked) {\n      updatedList = [...checked, event.target.value];\n    } else {\n      updatedList.splice(checked.indexOf(event.target.value), 1);\n    }\n    setChecked(updatedList);\n  };\n\n  // Generate string of checked items\n  const checkedItems = checked.length\n    ? checked.reduce((total, item) => {\n        return total + \", \" + item;\n      })\n    : \"\";\n\n  // Return classes based on whether item is checked\n  var isChecked = (item) =>\n    checked.includes(item) ? \"checked-item\" : \"not-checked-item\";\n\n  return (\n    <div className=\"app\">\n      <div className=\"checkList\">\n        <div className=\"title\">Your CheckList:</div>\n        <div className=\"list-container\">\n          {checkList.map((item, index) => (\n            <div key={index}>\n              <input value={item} type=\"checkbox\" onChange={handleCheck} />\n              <span className={isChecked(item)}>{item}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div>\n        {`Items checked are: ${checkedItems}`}\n      </div>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAEhC;AAAsB;AAAA;AAEtB,SAASC,GAAG,GAAG;EAEb,gBAA8BF,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAnCG,OAAO;IAAEC,UAAU;EAC1B,IAAMC,SAAS,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC;EAGtD,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIC,KAAK,EAAK;IAC7B,IAAIC,WAAW,sBAAOL,OAAO,CAAC;IAC9B,IAAII,KAAK,CAACE,MAAM,CAACN,OAAO,EAAE;MACxBK,WAAW,gCAAOL,OAAO,IAAEI,KAAK,CAACE,MAAM,CAACC,KAAK,EAAC;IAChD,CAAC,MAAM;MACLF,WAAW,CAACG,MAAM,CAACR,OAAO,CAACS,OAAO,CAACL,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC5D;IACAN,UAAU,CAACI,WAAW,CAAC;EACzB,CAAC;EAGD,IAAMK,YAAY,GAAGV,OAAO,CAACW,MAAM,GAC/BX,OAAO,CAACY,MAAM,CAAC,UAACC,KAAK,EAAEC,IAAI,EAAK;IAC9B,OAAOD,KAAK,GAAG,IAAI,GAAGC,IAAI;EAC5B,CAAC,CAAC,GACF,EAAE;EAGN,IAAIC,SAAS,GAAG,SAAZA,SAAS,CAAID,IAAI;IAAA,OACnBd,OAAO,CAACgB,QAAQ,CAACF,IAAI,CAAC,GAAG,cAAc,GAAG,kBAAkB;EAAA;EAE9D,OACE;IAAK,SAAS,EAAC,KAAK;IAAA,WAClB;MAAK,SAAS,EAAC,WAAW;MAAA,WACxB;QAAK,SAAS,EAAC,OAAO;QAAA,UAAC;MAAe,EAAM,EAC5C;QAAK,SAAS,EAAC,gBAAgB;QAAA,UAC5BZ,SAAS,CAACe,GAAG,CAAC,UAACH,IAAI,EAAEI,KAAK;UAAA,OACzB;YAAA,WACE;cAAO,KAAK,EAAEJ,IAAK;cAAC,IAAI,EAAC,UAAU;cAAC,QAAQ,EAAEX;YAAY,EAAG,EAC7D;cAAM,SAAS,EAAEY,SAAS,CAACD,IAAI,CAAE;cAAA,UAAEA;YAAI,EAAQ;UAAA,GAFvCI,KAAK,CAGT;QAAA,CACP;MAAC,EACE;IAAA,EACF,EAEN;MAAA,kCACyBR;IAAY,EAC/B;EAAA,EACF;AAEV;AAEA,IAAMS,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACnDvB,QAAQ,CAACwB,MAAM,CAAC,KAAC,GAAG,KAAG,EAAEH,WAAW,CAAC"},"metadata":{},"sourceType":"module"}